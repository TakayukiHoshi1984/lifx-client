version: 2
jobs:
  build:
    docker:
      - image: circleci/openjdk:8-jdk

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: mvn dependency:go-offline

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}

      - run: mvn build

    test:
      docker:
        - image: circleci/openjdk:8-jdk

      working_directory: ~/repo

      environment:
        # Customize the JVM maximum heap limit
        MAVEN_OPTS: -Xmx3200m

      steps:
        - checkout

        # Download and cache dependencies
        - restore_cache:
            keys:
              - v1-dependencies-{{ checksum "pom.xml" }}
              # fallback to using the latest cache if no exact match is found
              - v1-dependencies-

        - run: mvn dependency:go-offline

        - save_cache:
            paths:
              - ~/.m2
            key: v1-dependencies-{{ checksum "pom.xml" }}

        - run: mvn integration-test

  deploy:
    docker:
      - image: circleci/openjdk:8-jdk

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: mvn dependency:go-offline

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}

      - run: mvn deploy --settings settings.xml

workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - build
      - test
      - deploy:
          filters.branches.only:
            - master

